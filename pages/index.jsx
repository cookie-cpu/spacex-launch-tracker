import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { ApolloClient, InMemoryCache, gql } from '@apollo/client';


export default function Home({ launches }) {
  console.log('launches', launches);

  return (
    <div className={styles.container}>
        <Head>
          <title>SpaceX Launch Tracker</title>
          <meta name="description" content="Generated by create next app" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>
          SpaceX Launches
          </h1>

          <p className={styles.description}>
            latest launches
          </p>

          <div className={styles.grid}>
            {launches.map(launch => {
              return (
              
                  <div key={launch.id}  className={styles.card}>
                    <h2>{launch.mission_name}</h2>
                    <p><strong>Launch Time: </strong>{new Date(launch.launch_date_local).toLocaleDateString("en-ca")}</p>
                    <img className={styles.patch} src={launch.links.mission_patch_small}></img>
                    <p>{launch.rocket.rocket_name}</p>
                    <p>{launch.launch_site.site_name_long}</p>

                    <div className={styles.links}>
                        {launch.links.video_link && <a href={launch.links.video_link} target="_blank">Video Link </a>}
                        {launch.links.article_link && <a href={launch.links.article_link} target="_blank">Article link</a>}
                    </div>
                    
                    
                  </div>
                
              )
            })}
  
          </div>
        </main>

    </div>
  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: 'https://api.spacex.land/graphql/',
    cache: new InMemoryCache()
  });

  const { data } = await client.query({
    query: gql`
      query GetLaunches {
        launchesPast(limit: 12) {
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
            flickr_images
            mission_patch_small
          }
          id
          rocket {
            rocket_name
          }
        }
      }
      
    `
  })

  return {
    props: {
      launches: data.launchesPast
    }
  }
}